// <auto-generated />
using System;
using Import_Excel.Infrastructore.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Import_Excel.Infrastructore.Migrations
{
    [DbContext(typeof(ProgramDbContext))]
    [Migration("20250316070506_CreateTable")]
    partial class CreateTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SSO.Share.Domain.Sql.Admin.Area.Area", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AreaTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HierarchicalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<float>("Ratio")
                        .HasColumnType("real");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("AreaTypeId");

                    b.HasIndex("ParentId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("SSO.Share.Domain.Sql.Admin.Area.AreaType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifire")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AreaTypes", (string)null);
                });

            modelBuilder.Entity("SSO.Share.Domain.Sql.Admin.Area.Area", b =>
                {
                    b.HasOne("SSO.Share.Domain.Sql.Admin.Area.AreaType", "AreaType")
                        .WithMany("Areas")
                        .HasForeignKey("AreaTypeId");

                    b.HasOne("SSO.Share.Domain.Sql.Admin.Area.Area", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("AreaType");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SSO.Share.Domain.Sql.Admin.Area.Area", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("SSO.Share.Domain.Sql.Admin.Area.AreaType", b =>
                {
                    b.Navigation("Areas");
                });
#pragma warning restore 612, 618
        }
    }
}
